volumes:
  mongodb_data:

networks:
  wedding_website:

services:
  mongodb:
    image: mongo:8.0.0
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
      - wedding_website

  redis:
    image: redis:7.4.1
    restart: unless-stopped
    networks:
      - wedding_website

  backend:
    build:
      context: ../Server
      dockerfile: ../Production/Dockerfile.Server.prod
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - mongodb
    networks:
      - wedding_website

  frontend:
    build:
      context: ../Client
      dockerfile: ../Production/Dockerfile.Client.prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    networks:
      - wedding_website

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    restart: unless-stopped
    ports:
      - 4321:80
    networks:
      - wedding_website
    depends_on:
      - backend
      - frontend
