# Use the official Node.js image from the Docker Hub
FROM node:16-alpine AS build

# Set the working directory
WORKDIR /app

# Copy the package.json and package-lock.json
COPY ./Client/package.json ./Client/package-lock.json ./

# Install the dependencies
RUN npm install

# Copy the rest of the application code
COPY ./Client .

# Copy the replace-env.sh script
COPY ./Client/replace-env.sh /usr/local/bin/replace-env.sh
RUN chmod +x /usr/local/bin/replace-env.sh

# Build the application for production
RUN npm run build



# Use the official Nginx image to serve the build
FROM nginx:alpine

# Copy the build output to the Nginx HTML directory
COPY --from=build /app/dist /usr/share/nginx/html

# Expose the port the app runs on
EXPOSE 80

# Command to run Nginx
CMD /bin/sh -c "/usr/local/bin/replace-env.sh && nginx -g 'daemon off;'"