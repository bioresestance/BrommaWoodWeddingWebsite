name: Build and Deploy Docker Images

on:
  push:
    branches:
      - main
    tags:
      - "*"

jobs:

  lint_server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install UV 
        uses: astral-sh/setup-uv@v3 

      - name: Lint Server
        run: |
          uv tool run ruff check --output-format=github ./Server


  build-and-deploy:
    runs-on: ubuntu-latest
    needs: lint_server
    env:
      REGISTRY: ghcr.io
      REPOSITORY: ${{ github.repository_owner }}/bromma_wood_wedding

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Client Docker image
        run: |
          TAG=${GITHUB_REF##*/}
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
            TAG="latest"
          fi
          DOCKERFILE="Production/Dockerfile.Client.prod"

          docker build -f ${DOCKERFILE} -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}_client:${TAG} .
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}_client:${TAG}

      - name: Build and push Server Docker image
        run: |
          TAG=${GITHUB_REF##*/}
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
              TAG="latest"
          fi
          DOCKERFILE="Production/Dockerfile.Server.prod"

          docker build -f ${DOCKERFILE} -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}_server:${TAG} .
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}_server:${TAG}
